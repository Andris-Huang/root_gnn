#!/usr/bin/env python
if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description='Create TFRecord of graphs for training')
    add_arg = parser.add_argument
    add_arg("input_file", help='input file')
    add_arg("outname", help='output name')
    add_arg('--evts-per-record', default=10, type=int, help='number of events per output file')
    add_arg('--type', default=None, help='which data to process', 
            choices=['TopTaggerDataset', 'WTaggerDataset',
                     'FourTopDataset', 'WTaggerFilteredDataset',
                     'WTaggerLeadingJetDataset',
                     'HerwigHadrons',
                     ]) ## 'ToppairDataSet',
    add_arg("--debug", action='store_true', help='in a debug mode')
    add_arg("--signal", action='store_true', help='the event is signal')
    add_arg("--max-evts", type=int, default=-1, help='maximum number of events to process')
    add_arg("--model-config", help='configuration file for training', default=None)


    args = parser.parse_args()
    n_evts_per_record = args.evts_per_record
    outname = args.outname

    print("Input Name {}".format(args.input_file))
    print("Output Name {}".format(outname))
    print("{} events per record".format(n_evts_per_record))
    print("Data type:", args.type)

    if args.type is None:
        print("Specify a data type via --type")
        parser.print_help()
        exit(1)
        
    from root_gnn import prepare # the main program to produce the graph
    data = getattr(prepare, args.type)()
    if args.type == "WTaggerFilteredDataset":
        if args.model_config is None:
            print("WTaggerFilteredDataset requires model config, --model-config")
            exit(1)
        else:
            data.set_gnn_config(args.model_config)

    if args.type in ["FourTopDataset", "WTaggerLeadingJetDataset", "WTaggerFilteredDataset"]:
        if args.signal:
            data.signal()

    data.process(filename=args.input_file, save=True, outname=outname,\
        n_evts_per_record=n_evts_per_record, debug=args.debug,
        max_evts=args.max_evts)